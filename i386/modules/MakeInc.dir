SRCROOT = $(shell pwd)/../../../
OBJROOT = $(SRCROOT)/obj/i386/modules/$(DIR)
SYMROOT = $(SRCROOT)/sym/i386/modules/
DSTROOT = $(SRCROOT)/dst/i386
DOCROOT = $(SRCROOT)/doc
IMGROOT = $(SRCROOT)/sym/cache
IMGSKELROOT = $(SRCROOT)/imgskel
CDBOOT = ${IMGROOT}/usr/standalone/i386/cdboot


ifeq ($(BUILT_IN),yes)
override OBJROOT = $(SRCROOT)/obj/i386/boot2_modules/$(DIR)
override SYMROOT = $(SRCROOT)/obj/i386/
endif

include ${SRCROOT}/Make.rules


ifeq ($(BUILT_IN),yes)

CFLAGS	:= $(RC_CFLAGS) $(OPTIM) $(MORECPP) -arch i386 -g -Wmost -Werror \
		-fno-builtin -DSAIO_INTERNAL_USER -static $(OMIT_FRAME_POINTER_CFLAG) \
		-mpreferred-stack-boundary=2 -fno-align-functions -fno-stack-protector \
		-march=pentium4 -msse2 -mfpmath=sse -msoft-float -nostdinc -include $(SRCROOT)/autoconf.h
	      
CPPFLAGS := $(CPPFLAGS) -arch i386 -static -nostdinc++ -Wmost -Werror \
	-fno-builtin -mpreferred-stack-boundary=2 \
	-fno-align-functions -fno-stack-protector \
	-march=pentium4 -msse2 -mfpmath=sse -msoft-float \
	-arch i386 -include $(SRCROOT)/autoconf.h

else

CFLAGS := $(CLFAGS) -nostdinc -Wmost -Werror \
	-fno-builtin -mpreferred-stack-boundary=2 \
	-fno-align-functions -fno-stack-protector \
	-march=pentium4 -msse2 -mfpmath=sse -msoft-float \
	-arch i386 -include $(SRCROOT)/autoconf.h
	
CPPFLAGS := $(CPPFLAGS) -nostdinc++ -Wmost -Werror \
	-fno-builtin -mpreferred-stack-boundary=2 \
	-fno-align-functions -fno-stack-protector \
	-march=pentium4 -msse2 -mfpmath=sse -msoft-float \
	-arch i386 -include $(SRCROOT)/autoconf.h

endif


UTILDIR = ../../util
LIBSADIR = ../../libsa
LIBSAIODIR = ../../libsaio
BOOT2DIR = ../../boot2

MODULE_INCLUDES :=  $(foreach x,$(MODULE_DEPENDENCIES),-I$(SRCROOT)/i386/modules/$(x)/include/)


INC = -I$(SRCROOT)/i386/modules/include/ -Iinclude/ -I$(SRCROOT)/i386/libsaio/ -I$(SRCROOT)/i386/libsa/ -I$(SRCROOT)/i386/include/ -I$(SRCROOT)/i386/boot2/ $(MODULE_INCLUDES)
DEFINES := -D__KLIBC__ $(DEFINES)

MODULE_DEPENDENCIES :=  $(wildcard $(foreach x,$(MODULE_DEPENDENCIES),$(SYMROOT)/modules/$(x).dylib)) \
						$(wildcard $(foreach x,$(MODULE_DEPENDENCIES),$(OBJROOT)/../$(x).dylib))

MODULE_DEPENDENCIES_CMD := $(foreach x,$(MODULE_DEPENDENCIES), -weak_library $(x))

INSTALLDIR = $(DSTROOT)/System/Library/Frameworks/System.framework/Versions/B/PrivateHeaders/standalone

MODULE_DEFINITION := $(CONFIG_$(shell echo $(MODULE_NAME) | tr '[:lower:]' '[:upper:]')_MODULE)


ifeq  ($(MODULE_DEFINITION),m)
ifneq ($(BUILT_IN),yes)

# Make this as a *MODULE*
all: dylib

else
# Module not selected to be compiled as a module
all:

endif

else

ifeq ($(MODULE_DEFINITION),y)
ifeq ($(BUILT_IN),yes)

# Make this *BUILT IN*
all: dylib_LINKER

else
# Module not selected to be built in
all:

endif
else

# Don't compile this module
all:

endif
endif


dylib_LINKER: $(SRCROOT)/sym/i386/boot_modules.c $(SRCROOT)/sym/i386/boot_modules.h dylib 

dylib: ${SYMROOT}/modules/ ${OBJROOT} $(SYMROOT)/modules/$(MODULE_NAME).dylib


ifeq ($(BUILT_IN),yes)

$(SYMROOT)/modules/$(MODULE_NAME).dylib: $(addprefix $(OBJROOT)/, ${MODULE_OBJS}) $(MODULE_DEPENDENCIES)
	@echo "\t[LD] $(MODULE_NAME).dylib"
	@ld -arch i386 -undefined dynamic_lookup \
	-dylib -read_only_relocs suppress \
	-S -x -Z -dead_strip_dylibs \
	-no_uuid \
	-current_version $(MODULE_VERSION) -compatibility_version $(MODULE_COMPAT_VERSION) \
	-final_output $(MODULE_NAME) \
	$(filter %.o,$^) \
	-macosx_version_min 10.6 \
	-o $(SYMROOT)/modules/$(MODULE_NAME).dylib

else

$(SYMROOT)/modules/$(MODULE_NAME).dylib: $(addprefix $(OBJROOT)/, ${MODULE_OBJS}) $(MODULE_DEPENDENCIES) $(SRCROOT)/obj/i386/boot2/Symbols_LINKER_ONLY.dylib
	@echo "\t[LD] $(MODULE_NAME).dylib"
	
	@ld -arch i386 \
	-alias _$(MODULE_START) start \
	-dylib -read_only_relocs suppress \
	-S -x -Z -dead_strip_dylibs \
	-no_uuid \
	-current_version $(MODULE_VERSION) -compatibility_version $(MODULE_COMPAT_VERSION) \
	-final_output $(MODULE_NAME) \
	$(filter %.o,$^) \
	-weak_library $(SRCROOT)/obj/i386/boot2/Symbols_LINKER_ONLY.dylib \
	$(MODULE_DEPENDENCIES_CMD) \
	-macosx_version_min 10.6 \
	-o $@
		
endif


clean:
	@echo "\t[RM] $(SYMROOT)/modules/$(MODULE_NAME).dylib"
	@echo "\t[RM] $(OBJROOT)"
	@echo "\t[RM] $(DSTROOT)"
	@echo "\t[RM] $(SRCROOT)/revision"
	@echo "\t[RM] $(SRCROOT)/i386/modules/module_includes"
	@rm -rf $(SYMROOT)/modules/$(MODULE_NAME).dylib &> /dev/null
	@rm -rf $(OBJROOT) $(DSTROOT) $(SRCROOT)/revision $(SRCROOT)/i386/modules/module_includes

	
${SYMROOT}/modules/:
	@echo "\t[MKDIR] $@"
	@$(MKDIRS) $@

	

.PHONY: $(SRCROOT)/sym/i386/boot_modules.h
.PHONY: $(SRCROOT)/sym/i386/boot_modules.c

$(SRCROOT)/sym/i386/boot_modules.c: 
	@echo "\tstart_built_in_module(\"$(MODULE_NAME)\", &$(MODULE_START));" >> $@
	
$(SRCROOT)/sym/i386/boot_modules.h:
	@echo "void $(MODULE_START)(); // $(MODULE_NAME)" >> $@


#dependencies
-include $(OBJROOT)/Makedep